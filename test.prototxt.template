name: "IQA_NET"
layers {
  name: "data"
  type: IMAGE_DATA
#  type: DATA
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
#    crop_size: 24
#mean_file: "../meanfile/01_clean_crop_train_mean.binaryproto"
  }
  image_data_param {
    source: "../../lables/JND_label_crop_abspath_train.txt"
    #source: "../../AWAN_clean_crop_train_lmdb"
    batch_size: 128 
    #backend : LMDB
#    new_height : 32
#    new_width : 32
  }
}
layers {
  name: "data"
  type: IMAGE_DATA
  #type: DATA
  top: "data" 
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
#crop_size: 24 
#mean_file: "../meanfile/01_clean_crop_test_mean.binaryproto"
  }
  image_data_param {
#  source: "../label/all_test_08_level.txt"
#source: "../../lables/JND_label_crop_abspath_test.txt"
    source: "INPUTIMAGE"
    batch_size: 1
    #source: "../../AWAN_clean_crop_test_lmdb"
    #backend : LMDB
#    new_height: 32
#    new_width: 32
  }
  
}
layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  top: "conv1"
  convolution_param {
    num_output: 20 
    kernel_size: 11
    weight_filler {
      type: "gaussian"
      std: 0.25
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "conv1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  top: "conv2"
  convolution_param {
    num_output: 50
    kernel_size: 7
    weight_filler {
      type: "gaussian"
      std: 0.14
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layers {
  name: "relu1"
  type: RELU
  bottom: "conv2"
  top: "conv2"
}

layers {
  name: "norm1"
  type: LRN
  bottom: "conv2"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

layers {
  name: "conv1_2l"
  type: CONVOLUTION
  bottom: "data"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  top: "conv1_2l"
  convolution_param {
    num_output: 50
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.14
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layers {
  name: "relu1_2l"
  type: RELU
  bottom: "conv1_2l"
  top: "conv1_2l"
}

layers {
  name: "norm1_2l"
  type: LRN
  bottom: "conv1_2l"
  top: "norm1_2l"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}

layers {
  name: "pool1"
  type: POOLING
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 6  
  }
}

layers {
  name: "afc1"
  type: INNER_PRODUCT
  bottom: "pool1"
  top: "afc1"
 
    blobs_lr: 1
    blobs_lr: 2
    weight_decay: 1
    weight_decay: 0
    inner_product_param{
    num_output: 64 
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }

}

layers {
  name: "pool2"
  type: POOLING
  bottom: "norm1"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 6  
  }
}     


layers {
  name: "afc2"
  type: INNER_PRODUCT
  bottom: "pool2"
  top: "afc2"

    blobs_lr: 1
    blobs_lr: 2              
    weight_decay: 1
    weight_decay: 0
    inner_product_param{
    num_output: 64 
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layers {
  name: "pool1_2l"
  type: POOLING
  bottom: "norm1_2l"
  top: "pool1_2l"
  pooling_param {
    pool: MAX
    kernel_size: 6  
  }
}

layers {
  name: "afc1_2l"
  type: INNER_PRODUCT
  bottom: "pool1_2l"
  top: "afc1_2l"
 
    blobs_lr: 1
    blobs_lr: 2
    weight_decay: 1
    weight_decay: 0
    inner_product_param{
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }

}

layers {
  name: "pool2_2l"
  type: POOLING
  bottom: "norm1_2l"
  top: "pool2_2l"
  pooling_param {
    pool: AVE
    kernel_size: 6  
  }
}     


layers {
  name: "afc2_2l"
  type: INNER_PRODUCT
  bottom: "pool2_2l"
  top: "afc2_2l"

    blobs_lr: 1
    blobs_lr: 2              
    weight_decay: 1
    weight_decay: 0
    inner_product_param{
    num_output: 64 
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "concat"
  bottom: "afc1"
  bottom: "afc2"
  bottom: "afc1_2l"
  bottom: "afc2_2l"
  top: "concat"
  type: CONCAT
  concat_param {
    concat_dim: 1
  }
}

layers {
  name: "fc1"
  type: INNER_PRODUCT
  bottom: "concat"
  top: "fc1"
 
    blobs_lr: 1
    blobs_lr: 2
    weight_decay: 1
    weight_decay: 0
    inner_product_param{
    num_output: 1024 
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

#layers {
#    name :"drop2"
#    type : DROPOUT
#    bottom : "fc1"
#    top : "fc1"
#    dropout_param{
#        dropout_ratio : 0.5
#    }
#}

layers {
  name: "relu2"
  type: RELU
  bottom: "fc1"
  top: "fc1"
}

layers {
  name: "fc2"
  type: INNER_PRODUCT
  bottom: "fc1"
  top: "fc2"
    blobs_lr: 1
    blobs_lr: 2
    weight_decay: 1
    weight_decay: 0
    inner_product_param{
    num_output: 8 
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "relu3"
  type: RELU
  bottom: "fc2"
  top: "fc2"
}

layers {
name: "accuracy"
  type: ACCURACY
  bottom: "fc2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "fc2"
  bottom: "label"
  top: "loss"
}
layers{
    name : "prb"
    type : SOFTMAX
    bottom : "fc2"
    top : "prb"
    include {
        phase : TEST
    }
}

